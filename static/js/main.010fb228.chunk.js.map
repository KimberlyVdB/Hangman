{"version":3,"sources":["Hangman.js","words.js","App.js","serviceWorker.js","index.js"],"names":["Hangman","_this$props","this","props","progress","done","react_default","a","createElement","width","height","xmlns","className","id","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","x1","y1","x2","y2","display","cx","cy","rx","ry","x","y","style","fontSize","color","PureComponent","getRandomWord","words","Math","floor","random","length","renderWord","word","guesses","console","log","lettersOfWord","split","map","letter","indexOf","join","answereArray","i","includes","push","WordView","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","button","e","preventDefault","toConsumableArray","setState","btn","_this2","_this$state","wordToRender","buttons","ref","key","disabled","disableBtn","onClick","pushGuess","Layout","_ref","children","role","aria-label","restartGame","bind","src_Hangman","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.010fb228.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Hangman extends PureComponent {\r\n  render() {\r\n    const {\r\n      progress,\r\n      done\r\n    } = this.props;\r\n    return (\r\n      <svg width=\"530\" height=\"320\" xmlns=\"http://www.w3.org/2000/svg\" className=\"hangman\">\r\n        <g id=\"stand\">\r\n          <title>stand</title>\r\n          <line fill=\"none\" stroke=\"#DEB887\" strokeWidth=\"5\" strokeLinejoin=\"null\" strokeLinecap=\"null\" x1=\"161\" y1=\"25\" x2=\"161\" y2=\"49\" id=\"svg_20\" />\r\n          <line fill=\"none\" stroke=\"#DEB887\" strokeWidth=\"5\" strokeLinejoin=\"null\" strokeLinecap=\"null\" x1=\"163\" y1=\"26\" x2=\"60\" y2=\"28\" id=\"svg_21\" />\r\n          <line fill=\"none\" stroke=\"#DEB887\" strokeWidth=\"5\" strokeLinejoin=\"null\" strokeLinecap=\"null\" x1=\"61\" y1=\"26\" x2=\"61\" y2=\"316\" id=\"svg_23\" />\r\n          <line fill=\"none\" stroke=\"#cdffcd\" strokeWidth=\"8\" strokeLinejoin=\"null\" strokeLinecap=\"null\" x1=\"25\" y1=\"315\" x2=\"500\" y2=\"315\" id=\"svg_25\" />\r\n          <line fill=\"none\" stroke=\"#DEB887\" strokeWidth=\"8\" strokeLinejoin=\"null\" strokeLinecap=\"null\" x1=\"25\" y1=\"315\" x2=\"101\" y2=\"315\" id=\"svg_24\" />\r\n        </g>\r\n        <g id=\"head\" display={progress > 0 ? '' : 'none'}>\r\n          <title>head</title>\r\n          <ellipse fill=\"#fcf9f9\" stroke=\"#ffffff\" strokeWidth=\"5\" cx=\"160\" cy=\"77\" id=\"svg_1\" rx=\"25\" ry=\"26\" />\r\n        </g>\r\n        <g id=\"torso\" display={progress > 1 ? '' : 'none'}>\r\n          <title>torso</title>\r\n          <line fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"4\" strokeLinejoin=\"null\" strokeLinecap=\"null\" x1=\"157\" y1=\"100\" x2=\"157\" y2=\"190\" id=\"svg_9\" />\r\n        </g>\r\n        <g id=\"rightarm\" display={progress > 2 ? '' : 'none'}>\r\n          <title>rightarm</title>\r\n          <line fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"3\" strokeLinejoin=\"null\" strokeLinecap=\"null\" x1=\"158\" y1=\"130\" x2=\"204\" y2=\"107\" id=\"svg_13\" />\r\n        </g>\r\n        <g id=\"leftarm\" display={progress > 3 ? '' : 'none'}>\r\n          <title>leftarm</title>\r\n          <line strokeWidth=\"3\" id=\"svg_32\" y2=\"108\" x2=\"113\" y1=\"129\" x1=\"157\" strokeLinecap=\"null\" strokeLinejoin=\"null\" stroke=\"#ffffff\" fill=\"none\" />\r\n        </g>\r\n        <g id=\"leftleg\" display={progress > 4 ? '' : 'none'}>\r\n          <title>leftleg</title>\r\n          <line fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"3\" strokeLinejoin=\"null\" strokeLinecap=\"null\" x1=\"156\" y1=\"188\" x2=\"109\" y2=\"229\" id=\"svg_14\" />\r\n        </g>\r\n        <g id=\"rightleg\" display={progress > 5 ? '' : 'none'}>\r\n          <title>rightleg</title>\r\n          <line fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"3\" strokeLinejoin=\"null\" strokeLinecap=\"null\" x1=\"157\" y1=\"187\" x2=\"189\" y2=\"233\" id=\"svg_16\" />\r\n          <text x=\"200\" y=\"180\" fill=\"#ff9999\" stroke=\" #ff9999\" style={{ fontSize: '50px', color: ' #ff9999' }}>\r\n            YOU DIED,\r\n          </text>\r\n          <text x=\"200\" y=\"225\" fill=\"#ff9999\" stroke=\" #ff9999\" style={{ fontSize: '50px', color: ' #ff9999' }}>\r\n            VERY SAD :(\r\n          </text>\r\n        </g>\r\n        <g id=\"youWonText\" display={done ? '' : 'none'}>\r\n          <title>won</title>\r\n          <text x=\"190\" y=\"160\" fill=\"#ff9999\" stroke=\" #ff9999\" style={{ fontSize: '50px', color: ' #ff9999' }}>\r\n            YOU WON,\r\n          </text>\r\n          <text x=\"170\" y=\"210\" fill=\"#ff9999\" stroke=\" #ff9999\" style={{ fontSize: '50px', color: ' #ff9999' }}>\r\n            NO HANGING\r\n          </text>\r\n          <text x=\"200\" y=\"260\" fill=\"#ff9999\" stroke=\" #ff9999\" style={{ fontSize: '50px', color: ' #ff9999' }}>\r\n            FOR YOU!\r\n          </text>\r\n        </g>\r\n      </svg >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Hangman;\r\n\r\n\r\n","import words from './longwords.json'\r\n\r\nexport const getRandomWord = () => {\r\n    return words[Math.floor(Math.random() * words.length)];\r\n};\r\n\r\nexport const renderWord = (word, guesses) => {\r\n    console.log(guesses)\r\n    const lettersOfWord = word.split(\"\").map(letter => guesses.indexOf(letter) >= 0 ? letter : \" _\").join(' ');\r\n    console.log(word, lettersOfWord);\r\n    let answereArray = [];\r\n    for (let i = 0; i < word.length; i++) {\r\n        const letter = word[i]\r\n        if (guesses.includes(letter)) {\r\n            answereArray.push(letter);\r\n        } else {\r\n            answereArray.push(\" _ \");\r\n        }\r\n    }\r\n    return answereArray;\r\n}\r\n\r\nexport const done = (word, guesses) => {\r\n    const foo = renderWord(word, guesses).join('')\r\n    if (word === foo)\r\n        return true\r\n}","import './style.css';\r\nimport React from 'react';\r\nimport Hangman from './Hangman'\r\nimport { renderWord, getRandomWord, done } from './words';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { word: getRandomWord(), guesses: [], progress: 0 };\r\n    }\r\n\r\n    pushGuess(button, e, word) {\r\n        e.preventDefault();\r\n        const guesses = [...this.state.guesses];\r\n        guesses.push(button);\r\n        this.setState({ guesses });\r\n        if (!this.state.word.includes(button) && !done(this.state.word, this.state.guesses)) {\r\n            this.setState({ progress: this.state.progress + 1 });\r\n        }\r\n    }\r\n\r\n    disableBtn(btn) {\r\n        if (this.state.progress > 5) {\r\n            return true\r\n        }\r\n        if (done(this.state.word, this.state.guesses) === true) {\r\n            return true\r\n        } if (this.state.guesses.includes(btn)) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    restartGame(progress, word) {\r\n        this.setState({ progress: 0, word: getRandomWord(), guesses: [] });\r\n    }\r\n\r\n    render() {\r\n        const { word, guesses, progress } = this.state;\r\n        const wordToRender = renderWord(word, guesses);\r\n        const guessButtons = \"abcdefghijklmnopqrstuvwxyz\".split(\"\")\r\n        const buttons = guessButtons.map(button => {\r\n            return <button ref=\"btn\" key={button} disabled={this.disableBtn(button)} onClick={(e) => this.pushGuess(button, e)}>{button}</button>\r\n        })\r\n        const Layout = ({ children }) =>\r\n            <div className=\"game\">\r\n                <h1>Are you ready to HANG (out)? <span role=\"img\" aria-label=\"img\">⚰️</span></h1>\r\n                {children}\r\n                <WordView renderWord={wordToRender} />\r\n                {buttons}\r\n                <button className=\"newGame\" onClick={this.restartGame.bind(this)}>NEW GAME</button>\r\n                <footer className=\"footer\">\r\n                    <p>Copyright by Sugarcube© powered by rainbows <span role=\"img\" aria-label=\"img\" >™🌈</span></p>\r\n                </footer>\r\n            </div>\r\n        if (done(word, guesses)) {\r\n            return <Layout><Hangman progress={progress} done={true} /></Layout>\r\n        }\r\n        else {\r\n            return <Layout><Hangman progress={progress} done={false} /></Layout>\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n}\r\n\r\nfunction WordView(props) {\r\n    return <p className='Word'>{props.renderWord}</p>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}